<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="D:/NetBeansProjects/PHP/Saft-PT_4_PHP/src/Rebelo/SaftPt/AuditFile" file="AuditFile.php" realpath="D:/NetBeansProjects/PHP/Saft-PT_4_PHP/src/Rebelo/SaftPt/AuditFile/AuditFile.php" size="20426" time="2020-12-19T16:24:51+00:00" unixtime="1608395091" sha1="2df35bdb5bd5e9480fa37c1b564590d850142d61" relative="Rebelo/SaftPt/AuditFile/AuditFile.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_DECLARE">declare</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strict_types</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3"/>
  <line no="4">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">AuditFile</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5"/>
  <line no="6">
    <token name="T_REQUIRE_ONCE">require_once</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'RSimpleXmlElement.php'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// In console app does't load from composer autoloader</token>
  </line>
  <line no="7"/>
  <line no="8">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">AuditFile</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">MasterFiles</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">MasterFiles</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="9">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">AuditFile</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">GeneralLedgerEntries</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">GeneralLedgerEntries</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="10">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">AuditFile</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SourceDocuments</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SourceDocuments</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="11">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Validate</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">ValidationConfig</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="12"/>
  <line no="13">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> * Class representing AuditFile</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> * &amp;lt;xs:element name="AuditFile"&gt;</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> * @since 1.0.0</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="18">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AuditFile</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AAuditFile</token>
  </line>
  <line no="19">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="20">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT">     * Node name</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="24">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">N_AUDITFILE</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"AuditFile"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="25"/>
  <line no="26">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="Header" minOccurs="1"/&amp;gt;</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">     * @var \Rebelo\SaftPt\AuditFile\Header $header</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="31">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Header</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$header</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="32"/>
  <line no="33">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT">     *  &amp;lt;xs:element name="MasterFiles"&gt;</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT">     * @var \Rebelo\SaftPt\AuditFile\MasterFiles\MasterFiles $masterFiles</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="38">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">MasterFiles</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$masterFiles</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="39"/>
  <line no="40">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="GeneralLedgerEntries" minOccurs="0"/&amp;gt;</token>
  </line>
  <line no="42"/>
  <line no="43">
    <token name="T_DOC_COMMENT">     * @var \Rebelo\SaftPt\AuditFile\GeneralLedgerEntries\GeneralLedgerEntries $generalLedgerEntries</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="45">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="46">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_STRING">GeneralLedgerEntries</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$generalLedgerEntries</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="47"/>
  <line no="48">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="SourceDocuments" minOccurs="0"/&amp;gt;</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">     * @var \Rebelo\SaftPt\AuditFile\SourceDocuments\SourceDocuments|null $sourceDocuments</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="53">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_STRING">SourceDocuments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$sourceDocuments</token>
    <token name="T_WHITESPACE">           </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="56">
    <token name="T_DOC_COMMENT">     * The Log file configuration file</token>
  </line>
  <line no="57">
    <token name="T_DOC_COMMENT">     * @var string|null</token>
  </line>
  <line no="58">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$log4phpConfigFilePath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="60"/>
  <line no="61">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="62">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element name="AuditFile"&gt;</token>
  </line>
  <line no="63">
    <token name="T_DOC_COMMENT">     * @param \Rebelo\SaftPt\AuditFile\ErrorRegister|null $errorRegister</token>
  </line>
  <line no="64">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="65">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="66">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_STRING">ErrorRegister</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errorRegister</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="67">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="68">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$log4phpConfigFilePath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="69">
    <token name="T_WHITESPACE">            </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">configure</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$log4phpConfigFilePath</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="70">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="71"/>
  <line no="72">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errorRegister</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="73">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$errorRegister</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ErrorRegister</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="74">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="75">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">parent</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errorRegister</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="76">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="77"/>
  <line no="78">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="79">
    <token name="T_DOC_COMMENT">     * Gets as header &lt;br&gt;</token>
  </line>
  <line no="80">
    <token name="T_DOC_COMMENT">     * The item Header contains the general information regarding the taxpayer,</token>
  </line>
  <line no="81">
    <token name="T_DOC_COMMENT">     * whom the SAF-T (PT) refers to.&lt;br&gt;</token>
  </line>
  <line no="82">
    <token name="T_DOC_COMMENT">     * This get will create the Header instance&lt;br&gt;</token>
  </line>
  <line no="83">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="Header" minOccurs="1"/&amp;gt;</token>
  </line>
  <line no="84">
    <token name="T_DOC_COMMENT">     * @return \Rebelo\SaftPt\AuditFile\Header</token>
  </line>
  <line no="85">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="86">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="87">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getHeader</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Header</token>
  </line>
  <line no="88">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="89">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">trace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="90">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">header</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">header</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Header</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">errorRegister</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="92">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="93">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">header</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="94">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="95"/>
  <line no="96">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="97">
    <token name="T_DOC_COMMENT">     * Get if is set Header</token>
  </line>
  <line no="98">
    <token name="T_DOC_COMMENT">     * @return bool</token>
  </line>
  <line no="99">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="100">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="101">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">issetHeader</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">bool</token>
  </line>
  <line no="102">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="103">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">header</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="104">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="105"/>
  <line no="106">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="107">
    <token name="T_DOC_COMMENT">     * Gets as masterFiles &lt;br&gt;</token>
  </line>
  <line no="108">
    <token name="T_DOC_COMMENT">     * This get will create the MasterFiles instance&lt;br&gt;</token>
  </line>
  <line no="109">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element name="MasterFiles"&gt;</token>
  </line>
  <line no="110">
    <token name="T_DOC_COMMENT">     * @return \Rebelo\SaftPt\AuditFile\MasterFiles\MasterFiles</token>
  </line>
  <line no="111">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="112">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="113">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getMasterFiles</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">MasterFiles</token>
  </line>
  <line no="114">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="115">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">trace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="116">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">masterFiles</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="117">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">masterFiles</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">MasterFiles</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getErrorRegistor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="118">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="119">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">masterFiles</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="120">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="121"/>
  <line no="122">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="123">
    <token name="T_DOC_COMMENT">     * Get if is set MasterFiles</token>
  </line>
  <line no="124">
    <token name="T_DOC_COMMENT">     * @return bool</token>
  </line>
  <line no="125">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="126">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="127">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">issetMasterFiles</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">bool</token>
  </line>
  <line no="128">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="129">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">masterFiles</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="130">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="131"/>
  <line no="132">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="133">
    <token name="T_DOC_COMMENT">     * Gets as generalLedgerEntries &lt;br&gt;</token>
  </line>
  <line no="134">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="GeneralLedgerEntries" minOccurs="0"/&amp;gt;</token>
  </line>
  <line no="135">
    <token name="T_DOC_COMMENT">     * @return \Rebelo\SaftPt\AuditFile\GeneralLedgerEntries\GeneralLedgerEntries</token>
  </line>
  <line no="136">
    <token name="T_DOC_COMMENT">     * @throws \Rebelo\SaftPt\AuditFile\NotImplemented</token>
  </line>
  <line no="137">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="138">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="139">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getGeneralLedgerEntries</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">GeneralLedgerEntries</token>
  </line>
  <line no="140">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="141">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="142">
    <token name="T_WHITESPACE">            </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">error</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" '%s'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Not implemented"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="143">
    <token name="T_WHITESPACE">        </token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">NotImplemented</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Not implemented"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="144">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="145"/>
  <line no="146">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="147">
    <token name="T_DOC_COMMENT">     * Gets as sourceDocuments &lt;br&gt;</token>
  </line>
  <line no="148">
    <token name="T_DOC_COMMENT">     * SourceDocuments&lt;br&gt;</token>
  </line>
  <line no="149">
    <token name="T_DOC_COMMENT">     * Lines in documents without fiscal relevance must not be exported,</token>
  </line>
  <line no="150">
    <token name="T_DOC_COMMENT">     * in particular technical descriptions, installation instructions and guarantee</token>
  </line>
  <line no="151">
    <token name="T_DOC_COMMENT">     * conditions. The internal code of the document type cannot be used in</token>
  </line>
  <line no="152">
    <token name="T_DOC_COMMENT">     * different document types, regardless of the table in which it is to be exported.&lt;br&gt;</token>
  </line>
  <line no="153">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="SourceDocuments" minOccurs="0"/&amp;gt;&lt;br&gt;</token>
  </line>
  <line no="154">
    <token name="T_DOC_COMMENT">     * This get will create the SourceDocuments instance if $generate is true</token>
  </line>
  <line no="155">
    <token name="T_DOC_COMMENT">     * @param bool $generate if true and SourceDocuments is null a new Instance will be created</token>
  </line>
  <line no="156">
    <token name="T_DOC_COMMENT">     * @return \Rebelo\SaftPt\AuditFile\SourceDocuments\SourceDocuments|null</token>
  </line>
  <line no="157">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="158">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="159">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getSourceDocuments</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">bool</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$generate</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_STRING">SourceDocuments</token>
  </line>
  <line no="160">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="161">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">trace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="162">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$generate</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">sourceDocuments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="163">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">sourceDocuments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SourceDocuments</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">errorRegister</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="164">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="165">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">sourceDocuments</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="166">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="167"/>
  <line no="168">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="169">
    <token name="T_DOC_COMMENT">     * Create the XML node</token>
  </line>
  <line no="170">
    <token name="T_DOC_COMMENT">     * @param \SimpleXMLElement $node</token>
  </line>
  <line no="171">
    <token name="T_DOC_COMMENT">     * @return \SimpleXMLElement</token>
  </line>
  <line no="172">
    <token name="T_DOC_COMMENT">     * @throws \Rebelo\SaftPt\AuditFile\AuditFileException</token>
  </line>
  <line no="173">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="174">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="175">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">createXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SimpleXMLElement</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SimpleXMLElement</token>
  </line>
  <line no="176">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="177">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_AUDITFILE</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="178">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="179">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Node name should be '%s' but is '%s"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_AUDITFILE</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="180">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="181">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="182">
    <token name="T_WHITESPACE">            </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="183">
    <token name="T_WHITESPACE">                </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">error</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" '%s'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="184">
    <token name="T_WHITESPACE">            </token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AuditFileException</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="185">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="186"/>
  <line no="187">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">header</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="188">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$label</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"SAF-T PT created by joaomfrebelo/saft-pt_4_php "</token>
  </line>
  <line no="189">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">ComposerRevisions</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Revisions</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$byName</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"joaomfrebelo/saft-pt_4_php"</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="190"/>
  <line no="191">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">defined</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"IS_UNIT_TEST"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="192">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getHeader</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setHeaderComment</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="193">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getHeader</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getHeaderComment</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
  </line>
  <line no="194">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$label</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getHeader</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getHeaderComment</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" - "</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$label</token>
  </line>
  <line no="195">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="196">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="197"/>
  <line no="198">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getHeader</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">createXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="199">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="200">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">errorRegister</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addOnCreateXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"no_header_table"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="201">
    <token name="T_WHITESPACE">            </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="202">
    <token name="T_WHITESPACE">                </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">error</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"No 'Header' on create xml node"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="203">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="204"/>
  <line no="205">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">masterFiles</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="206">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getMasterFiles</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">createXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="207">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="208">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">MasterFiles</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_MASTERFILES</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="209">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">errorRegister</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addOnCreateXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"no_master_files_table"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="210">
    <token name="T_WHITESPACE">            </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="211">
    <token name="T_WHITESPACE">                </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">error</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"No 'MasterFiles' on create xml node"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="212">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="213">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">sourceDocuments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="214">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getSourceDocuments</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">createXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="215">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="216">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="217">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="218"/>
  <line no="219">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="220">
    <token name="T_DOC_COMMENT">     * Parse the complete XML saft file</token>
  </line>
  <line no="221">
    <token name="T_DOC_COMMENT">     * @param \SimpleXMLElement $node</token>
  </line>
  <line no="222">
    <token name="T_DOC_COMMENT">     * @return void</token>
  </line>
  <line no="223">
    <token name="T_DOC_COMMENT">     * @throws \Rebelo\SaftPt\AuditFile\AuditFileException</token>
  </line>
  <line no="224">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="225">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="226">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">parseXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SimpleXMLElement</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">void</token>
  </line>
  <line no="227">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="228">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_AUDITFILE</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="229">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="230">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Node name should be '%s' but is '%s"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_AUDITFILE</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="231">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="232">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="233">
    <token name="T_WHITESPACE">            </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="234">
    <token name="T_WHITESPACE">                </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">error</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" '%s'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="235">
    <token name="T_WHITESPACE">            </token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AuditFileException</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="236">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="237">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$header</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getHeader</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="238">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$header</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">parseXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STRING">Header</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_HEADER</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="239"/>
  <line no="240">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$master</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getMasterFiles</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="241">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$master</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">parseXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STRING">MasterFiles</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_MASTERFILES</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="242"/>
  <line no="243">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STRING">SourceDocuments</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_SOURCEDOCUMENTS</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="244">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$sourceDocs</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getSourceDocuments</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="245">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$sourceDocs</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">parseXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STRING">SourceDocuments</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_SOURCEDOCUMENTS</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="246">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="247">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="248"/>
  <line no="249">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="250">
    <token name="T_DOC_COMMENT">     * Create the AuditFile Xml Root element</token>
  </line>
  <line no="251">
    <token name="T_DOC_COMMENT">     * @return \SimpleXMLElement</token>
  </line>
  <line no="252">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="253">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="254">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">createRootElement</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SimpleXMLElement</token>
  </line>
  <line no="255">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="256">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">RSimpleXMLElement</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getInstance</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="257">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;AuditFile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" '</token>
    <token name="T_PHPDOX_DOT">.</token>
  </line>
  <line no="258">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'xsi:schemaLocation="urn:OECD:StandardAuditFile-Tax:PT_1.04_01 .\SAFTPT1.04_01.xsd" '</token>
    <token name="T_PHPDOX_DOT">.</token>
  </line>
  <line no="259">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'xmlns="urn:OECD:StandardAuditFile-Tax:PT_1.04_01"&gt;&lt;/AuditFile&gt;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="260">
    <token name="T_WHITESPACE">            </token>
    <token name="T_STRING">LIBXML_PARSEHUGE</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PIPE">|</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">LIBXML_BIGLINES</token>
  </line>
  <line no="261">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="262">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="263"/>
  <line no="264">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="265">
    <token name="T_DOC_COMMENT">     * Get the saft as a xml string.&lt;br&gt;</token>
  </line>
  <line no="266">
    <token name="T_DOC_COMMENT">     * By the Portuguese Tax law, the ERP must generate the saft even if</token>
  </line>
  <line no="267">
    <token name="T_DOC_COMMENT">     * has errors, because of that rule when there are errors instead of</token>
  </line>
  <line no="268">
    <token name="T_DOC_COMMENT">     * throws an exception the error is registed in the ErrorRegister</token>
  </line>
  <line no="269">
    <token name="T_DOC_COMMENT">     * instance of the AuditFile instance, only in severe condition where is not</token>
  </line>
  <line no="270">
    <token name="T_DOC_COMMENT">     * possible to catch the exception or error that a \Exception or \Error will</token>
  </line>
  <line no="271">
    <token name="T_DOC_COMMENT">     * be throw. To know if there are errors access to the ErrorRegister instance</token>
  </line>
  <line no="272">
    <token name="T_DOC_COMMENT">     * of the AuditFile instance. Some validation to check for errors are done</token>
  </line>
  <line no="273">
    <token name="T_DOC_COMMENT">     * on the setter methods, when get the AuditFile as a xml string, no validation</token>
  </line>
  <line no="274">
    <token name="T_DOC_COMMENT">     * is done, validations can be done using the validation classes, however that validations</token>
  </line>
  <line no="275">
    <token name="T_DOC_COMMENT">     * in very big AuditFiles could have a time consume very height, is</token>
  </line>
  <line no="276">
    <token name="T_DOC_COMMENT">     * recommended to use in test environment, in production environment</token>
  </line>
  <line no="277">
    <token name="T_DOC_COMMENT">     * should be evaluated if is necessary.</token>
  </line>
  <line no="278">
    <token name="T_DOC_COMMENT">     * The string is returned in the encoding "UTF-8" (the encoding of simplexml), but the </token>
  </line>
  <line no="279">
    <token name="T_DOC_COMMENT">     * file must be export with encoding Windows-1252</token>
  </line>
  <line no="280">
    <token name="T_DOC_COMMENT">     * </token>
  </line>
  <line no="281">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="282">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="283">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="284">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">toXmlString</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">string</token>
  </line>
  <line no="285">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="286">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="287">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$xml</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">createXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">createRootElement</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">asXML</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="288">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">replaceHexUtf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$xml</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="289">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$xml</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="290">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="291"/>
  <line no="292">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="293">
    <token name="T_DOC_COMMENT">     * Return the toXmlString method but the xml string converted to "Windows-1252"</token>
  </line>
  <line no="294">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="295">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="296">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="297">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">toXmlStringWindows1252</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">string</token>
  </line>
  <line no="298">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="299">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="300">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$xml</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="301">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">toXmlString</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Windows-1252"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"UTF-8"</token>
  </line>
  <line no="302">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="303">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="304">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;?xml version="1.0"?&gt;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="305">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;?xml version="1.0" encoding="Windows-1252"?&gt;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$xml</token>
  </line>
  <line no="306">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="307">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="308"/>
  <line no="309">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="310">
    <token name="T_DOC_COMMENT">     * Write the XML to a file&lt;br&gt;</token>
  </line>
  <line no="311">
    <token name="T_DOC_COMMENT">     * By the Portuguese Tax law, the ERP must generate the saft even if</token>
  </line>
  <line no="312">
    <token name="T_DOC_COMMENT">     * has errors, because of that rule when there are errors instead of</token>
  </line>
  <line no="313">
    <token name="T_DOC_COMMENT">     * throws an exception the error is registed in the ErrorRegister</token>
  </line>
  <line no="314">
    <token name="T_DOC_COMMENT">     * instance of the AuditFile instance, only in severe condition where is not</token>
  </line>
  <line no="315">
    <token name="T_DOC_COMMENT">     * possible to catch the exception or error that a \Exception or \Error will</token>
  </line>
  <line no="316">
    <token name="T_DOC_COMMENT">     * be throw. To know if there are errors access to the ErrorRegister instance</token>
  </line>
  <line no="317">
    <token name="T_DOC_COMMENT">     * of the AuditFile instance. Some validation to check for errors are done</token>
  </line>
  <line no="318">
    <token name="T_DOC_COMMENT">     * on the setter methods, when write the AuditFile a file, other validation</token>
  </line>
  <line no="319">
    <token name="T_DOC_COMMENT">     * is done, the xml string structure is validated, but other validations</token>
  </line>
  <line no="320">
    <token name="T_DOC_COMMENT">     * can be done using the validation classes, however that validations</token>
  </line>
  <line no="321">
    <token name="T_DOC_COMMENT">     * in very big AuditFiles could have a time consume very hight, is</token>
  </line>
  <line no="322">
    <token name="T_DOC_COMMENT">     * recomended to use in test envoirment, in producion envoirment</token>
  </line>
  <line no="323">
    <token name="T_DOC_COMMENT">     * should be evaluated if is necessary.</token>
  </line>
  <line no="324">
    <token name="T_DOC_COMMENT">     * @param string $path File path to write, if exists will be  overwritten</token>
  </line>
  <line no="325">
    <token name="T_DOC_COMMENT">     * @return int The number of bytes that were written to the file</token>
  </line>
  <line no="326">
    <token name="T_DOC_COMMENT">     * @throws \Rebelo\SaftPt\AuditFile\AuditFileException</token>
  </line>
  <line no="327">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="328">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="329">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">toFile</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">int</token>
  </line>
  <line no="330">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="331">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="332">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$bytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">file_put_contents</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="333">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">toXmlStringWindows1252</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">LOCK_EX</token>
  </line>
  <line no="334">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="335">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$bytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="336">
    <token name="T_WHITESPACE">            </token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AuditFileException</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="337">
    <token name="T_WHITESPACE">                </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"failing write to file '%s'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="338">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="339">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="340">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$bytes</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="341">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="342"/>
  <line no="343">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="344">
    <token name="T_DOC_COMMENT">     * Load and parse a SAFT-PT file, afeter load and before parsing the will </token>
  </line>
  <line no="345">
    <token name="T_DOC_COMMENT">     * be done a validation against the XSD, you can check if has any error </token>
  </line>
  <line no="346">
    <token name="T_DOC_COMMENT">     * in the ErrorRegistor of the AuditFile instance, and you can make </token>
  </line>
  <line no="347">
    <token name="T_DOC_COMMENT">     * the data validation using the validateData method</token>
  </line>
  <line no="348">
    <token name="T_DOC_COMMENT">     * @param string $path</token>
  </line>
  <line no="349">
    <token name="T_DOC_COMMENT">     * @return \Rebelo\SaftPt\AuditFile\AuditFile</token>
  </line>
  <line no="350">
    <token name="T_DOC_COMMENT">     * @throws \Rebelo\SaftPt\AuditFile\AuditFileException</token>
  </line>
  <line no="351">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="352">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="353">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">loadFile</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AuditFile</token>
  </line>
  <line no="354">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="355">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$log4phpConfigFilePath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="356">
    <token name="T_WHITESPACE">            </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">configure</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$log4phpConfigFilePath</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="357">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="358">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">AuditFile</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_CLASS">class</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="359">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$audit</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AuditFile</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="360">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$xmlStr</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">file_get_contents</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="361">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$xmlStr</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="362">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"failing open file '%s'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="363">
    <token name="T_WHITESPACE">            </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">AuditFile</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_CLASS">class</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">error</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="364">
    <token name="T_WHITESPACE">            </token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AuditFileException</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="365">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="366"/>
  <line no="367">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$detOrder</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">array_merge</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="368">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"UTF-8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Windows-1252"</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_list_encodings</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="369">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="370">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$encodeing</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_detect_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$xmlStr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$detOrder</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="371">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$xmlEnc</token>
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$encodeing</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encodeing</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"UTF-8"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
  </line>
  <line no="372">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$xmlStr</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$xmlStr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"UTF-8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encodeing</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="373">
    <token name="T_WHITESPACE">        </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$xmlStr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="374"/>
  <line no="375">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$xmlEncClean</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="376">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/&lt;\?xml.+version.+encoding.+\?&gt;/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="377">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;?xml version="1.0"?&gt;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$xmlEnc</token>
  </line>
  <line no="378">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="379">
    <token name="T_WHITESPACE">        </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$xmlEnc</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="380"/>
  <line no="381">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$valXmlXsd</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Validate</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">XmlStructure</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$audit</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="382">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$valXmlXsd</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">validate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$xmlEncClean</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="383">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$xml</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">simplexml_load_string</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$xmlEncClean</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="384">
    <token name="T_WHITESPACE">        </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$xmlEncClean</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="385">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$xml</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="386">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="387">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Simplexml_load_string failing read string loaded from file '%s'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="388">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$path</token>
  </line>
  <line no="389">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="390">
    <token name="T_WHITESPACE">            </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">AuditFile</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_CLASS">class</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">error</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="391">
    <token name="T_WHITESPACE">            </token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AuditFileException</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="392">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="393">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$audit</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">parseXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$xml</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="394">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$audit</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="395">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="396"/>
  <line no="397">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="398">
    <token name="T_DOC_COMMENT">     * Validate the SAFT-PT audit file. </token>
  </line>
  <line no="399">
    <token name="T_DOC_COMMENT">     * @param string|null $pubKeyPath</token>
  </line>
  <line no="400">
    <token name="T_DOC_COMMENT">     * @param \Rebelo\SaftPt\Validate\ValidationConfig|null $config</token>
  </line>
  <line no="401">
    <token name="T_DOC_COMMENT">     * @return bool True if no errors (can have warnings)</token>
  </line>
  <line no="402">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="403">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="404">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">validate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pubKeyPath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="405">
    <token name="T_WHITESPACE">                             </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_STRING">ValidationConfig</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">bool</token>
  </line>
  <line no="406">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="407">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="408">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$sign</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Sign</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Sign</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="409"/>
  <line no="410">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pubKeyPath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="411">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$sign</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setPublicKeyFilePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pubKeyPath</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="412">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="413"/>
  <line no="414">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="415">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ValidationConfig</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="416">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setSignValidation</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pubKeyPath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="417">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="418"/>
  <line no="419">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getSignValidation</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pubKeyPath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="420">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"To validate signatures must indicate public key file path"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="421">
    <token name="T_WHITESPACE">            </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">error</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="422">
    <token name="T_WHITESPACE">            </token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AuditFileException</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="423">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="424"/>
  <line no="425">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$throw</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="426">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$logger</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="427">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$pool</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Spatie</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Async</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Pool</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="428">
    <token name="T_WHITESPACE">        </token>
  </line>
  <line no="429">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// TODO test async in a machine with pcntl and posix, special if in </token>
  </line>
  <line no="430">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// console app the progress bar over each other or not</token>
  </line>
  <line no="431"/>
  <line no="432">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getSchemaValidate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="433">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$pool</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">add</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="434">
    <token name="T_WHITESPACE">                </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="435">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="436">
    <token name="T_WHITESPACE">                                </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">info</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Start validating Scheme"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="437">
    <token name="T_WHITESPACE">                                </token>
    <token name="T_VARIABLE">$validate</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Validate</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">XmlStructure</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="438">
    <token name="T_WHITESPACE">                                </token>
    <token name="T_VARIABLE">$xml</token>
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">toXmlString</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="439">
    <token name="T_WHITESPACE">                                </token>
    <token name="T_VARIABLE">$validate</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">validate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$xml</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="440">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="441">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">catch</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="442">
    <token name="T_WHITESPACE">                </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$throw</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$logger</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="443">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="444">
    <token name="T_WHITESPACE">                                </token>
    <token name="T_COMMENT">/* @var $exception \Exception */</token>
  </line>
  <line no="445">
    <token name="T_WHITESPACE">                                </token>
    <token name="T_VARIABLE">$logger</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="446">
    <token name="T_WHITESPACE">                                </token>
    <token name="T_VARIABLE">$throw</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getMessage</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="447">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="448">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="449">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="450">
    <token name="T_WHITESPACE">        </token>
  </line>
  <line no="451">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Validate Invoices</token>
  </line>
  <line no="452">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$pool</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">add</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="453">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$sign</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="454">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="455">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">info</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Start validating SalesInvoices"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="456">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$siVal</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Validate</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SalesInvoices</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$sign</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="457">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$siVal</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setConfiguration</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="458">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$siVal</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">validate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="459">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="460">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">catch</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="461">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$throw</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$logger</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="462">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="463">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_COMMENT">/* @var $exception \Exception */</token>
  </line>
  <line no="464">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$logger</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="465">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$throw</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getMessage</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="466">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="467">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="468"/>
  <line no="469">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Validate MovementOfGoods</token>
  </line>
  <line no="470">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$pool</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">add</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="471">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$sign</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="472">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="473">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">info</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Start validating MovementOfGoods"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="474">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$mvVal</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Validate</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">MovementOfGoods</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$sign</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="475">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$mvVal</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setConfiguration</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="476">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$mvVal</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">validate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="477">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="478">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">catch</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="479">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$throw</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$logger</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="480">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="481">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_COMMENT">/* @var $exception \Exception */</token>
  </line>
  <line no="482">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$logger</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="483">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$throw</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getMessage</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="484">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="485">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="486"/>
  <line no="487">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Validate WorkingDocuments</token>
  </line>
  <line no="488">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$pool</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">add</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="489">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$sign</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="490">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="491">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">info</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Start validating WorkingDocument"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="492">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$worVal</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Validate</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">WorkingDocuments</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$sign</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="493">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$worVal</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setConfiguration</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="494">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$worVal</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">validate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="495">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="496">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">catch</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="497">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$throw</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$logger</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="498">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="499">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_COMMENT">/* @var $exception \Exception */</token>
  </line>
  <line no="500">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$logger</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="501">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$throw</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getMessage</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="502">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="503">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="504"/>
  <line no="505">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Validate Payments</token>
  </line>
  <line no="506">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$pool</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">add</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="507">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="508">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="509">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">info</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Start validating Payments"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="510">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$payVal</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Validate</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Payments</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="511">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$payVal</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setConfiguration</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="512">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$payVal</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">validate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="513">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="514">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">catch</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="515">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$throw</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$logger</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="516">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="517">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_COMMENT">/* @var $exception \Exception */</token>
  </line>
  <line no="518">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$logger</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="519">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$throw</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getMessage</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="520">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="521">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="522"/>
  <line no="523">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Validate OtherValidations</token>
  </line>
  <line no="524">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$pool</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">add</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="525">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="526">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="527">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">info</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Start other validations"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="528">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$other</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Validate</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">OtherValidations</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="529">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$other</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setConfiguration</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="530">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$other</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">validate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="531">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="532">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">catch</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="533">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$throw</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$logger</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="534">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="535">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_COMMENT">/* @var $exception \Exception */</token>
  </line>
  <line no="536">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$logger</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="537">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_VARIABLE">$throw</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getMessage</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="538">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="539">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="540">
    <token name="T_WHITESPACE">        </token>
  </line>
  <line no="541">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"End of data validation"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="542"/>
  <line no="543">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$pool</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">wait</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="544"/>
  <line no="545">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$throw</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="546">
    <token name="T_WHITESPACE">            </token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AuditFileException</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">join</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"; "</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$throw</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="547">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="548"/>
  <line no="549">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getErrorRegistor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasErrors</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="550">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="551">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="552"/>
</source>
