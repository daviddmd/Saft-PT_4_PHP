<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="D:/NetBeansProjects/PHP/Saft-PT_4_PHP/src/Rebelo/SaftPt/AuditFile/MasterFiles" file="Customer.php" realpath="D:/NetBeansProjects/PHP/Saft-PT_4_PHP/src/Rebelo/SaftPt/AuditFile/MasterFiles/Customer.php" size="18445" time="2020-12-19T16:24:51+00:00" unixtime="1608395091" sha1="66715efedbc6640f333b8a272e8990d6fc56ed28" relative="Rebelo/SaftPt/AuditFile/MasterFiles/Customer.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="3">
    <token name="T_COMMENT"> * The MIT License</token>
  </line>
  <line no="4">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="5">
    <token name="T_COMMENT"> * Copyright 2020 Jo&#xE3;o Rebelo.</token>
  </line>
  <line no="6">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="7">
    <token name="T_COMMENT"> * Permission is hereby granted, free of charge, to any person obtaining a copy</token>
  </line>
  <line no="8">
    <token name="T_COMMENT"> * of this software and associated documentation files (the "Software"), to deal</token>
  </line>
  <line no="9">
    <token name="T_COMMENT"> * in the Software without restriction, including without limitation the rights</token>
  </line>
  <line no="10">
    <token name="T_COMMENT"> * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</token>
  </line>
  <line no="11">
    <token name="T_COMMENT"> * copies of the Software, and to permit persons to whom the Software is</token>
  </line>
  <line no="12">
    <token name="T_COMMENT"> * furnished to do so, subject to the following conditions:</token>
  </line>
  <line no="13">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="14">
    <token name="T_COMMENT"> * The above copyright notice and this permission notice shall be included in</token>
  </line>
  <line no="15">
    <token name="T_COMMENT"> * all copies or substantial portions of the Software.</token>
  </line>
  <line no="16">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="17">
    <token name="T_COMMENT"> * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</token>
  </line>
  <line no="18">
    <token name="T_COMMENT"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</token>
  </line>
  <line no="19">
    <token name="T_COMMENT"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</token>
  </line>
  <line no="20">
    <token name="T_COMMENT"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</token>
  </line>
  <line no="21">
    <token name="T_COMMENT"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</token>
  </line>
  <line no="22">
    <token name="T_COMMENT"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</token>
  </line>
  <line no="23">
    <token name="T_COMMENT"> * THE SOFTWARE.</token>
  </line>
  <line no="24">
    <token name="T_COMMENT"> */</token>
  </line>
  <line no="25">
    <token name="T_DECLARE">declare</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strict_types</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="26"/>
  <line no="27">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">AuditFile</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">MasterFiles</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="28"/>
  <line no="29">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">AuditFile</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">AuditFileException</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="30">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">AuditFile</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Address</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="31">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Rebelo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SaftPt</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">AuditFile</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">ErrorRegister</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="32"/>
  <line no="33">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT"> * 2.2. - Customer&lt;br&gt;</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT"> * This table shall contain all the existing records operated during the</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT"> * taxation period in the relevant customers&#x2019; file, as well as those which</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT"> * may be implicit in the operations and do not exist in the relevant file.</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT"> * If, for instance, there is a sale for cash showing only the customer&#x2019;s</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT"> * taxpayer registration number or his name, and not included in the customers</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT"> * file of the application, this client&#x2019;s data shall be exported</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT"> * as client in the SAF-T (PT).</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT"> * &lt;pre&gt;</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT"> *     &amp;lt;xs:element name="Customer"&amp;gt;</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT"> *       &amp;lt;xs:complexType&amp;gt;</token>
  </line>
  <line no="45">
    <token name="T_DOC_COMMENT"> *           &amp;lt;xs:sequence&amp;gt;</token>
  </line>
  <line no="46">
    <token name="T_DOC_COMMENT"> *               &amp;lt;xs:element ref="CustomerID"/&amp;gt;</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT"> *               &amp;lt;xs:element ref="AccountID"/&amp;gt;</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT"> *               &amp;lt;xs:element ref="CustomerTaxID"/&amp;gt;</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT"> *               &amp;lt;xs:element ref="CompanyName"/&amp;gt;</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT"> *               &amp;lt;xs:element ref="Contact" minOccurs="0"/&amp;gt;</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT"> *               &amp;lt;xs:element ref="BillingAddress"/&amp;gt;</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT"> *               &amp;lt;xs:element ref="ShipToAddress" minOccurs="0" maxOccurs="unbounded"/&amp;gt;</token>
  </line>
  <line no="53">
    <token name="T_DOC_COMMENT"> *               &amp;lt;xs:element ref="Telephone" minOccurs="0"/&amp;gt;</token>
  </line>
  <line no="54">
    <token name="T_DOC_COMMENT"> *               &amp;lt;xs:element ref="Fax" minOccurs="0"/&amp;gt;</token>
  </line>
  <line no="55">
    <token name="T_DOC_COMMENT"> *               &amp;lt;xs:element ref="Email" minOccurs="0"/&amp;gt;</token>
  </line>
  <line no="56">
    <token name="T_DOC_COMMENT"> *               &amp;lt;xs:element ref="Website" minOccurs="0"/&amp;gt;</token>
  </line>
  <line no="57">
    <token name="T_DOC_COMMENT"> *               &amp;lt;xs:element ref="SelfBillingIndicator"/&amp;gt;</token>
  </line>
  <line no="58">
    <token name="T_DOC_COMMENT"> *           &amp;lt;/xs:sequence&amp;gt;</token>
  </line>
  <line no="59">
    <token name="T_DOC_COMMENT"> *       &amp;lt;/xs:complexType&amp;gt;</token>
  </line>
  <line no="60">
    <token name="T_DOC_COMMENT"> *   &amp;lt;/xs:element&amp;gt;</token>
  </line>
  <line no="61">
    <token name="T_DOC_COMMENT"> * &lt;/pre&gt;</token>
  </line>
  <line no="62">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="63">
    <token name="T_DOC_COMMENT"> * Class Customer</token>
  </line>
  <line no="64">
    <token name="T_DOC_COMMENT"> * @since 1.0.0</token>
  </line>
  <line no="65">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="66">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Customer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ACustomerSupplier</token>
  </line>
  <line no="67">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="68">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="69">
    <token name="T_DOC_COMMENT">     * Node name</token>
  </line>
  <line no="70">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="71">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="72">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">N_CUSTOMER</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Customer"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="73"/>
  <line no="74">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="75">
    <token name="T_DOC_COMMENT">     * Node name</token>
  </line>
  <line no="76">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="77">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="78">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">N_CUSTOMERID</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"CustomerID"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="79"/>
  <line no="80">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="81">
    <token name="T_DOC_COMMENT">     * Node name</token>
  </line>
  <line no="82">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="83">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="84">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">N_CUSTOMERTAXID</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"CustomerTaxID"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="85"/>
  <line no="86">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="87">
    <token name="T_DOC_COMMENT">     * Node name</token>
  </line>
  <line no="88">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="89">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="90">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">N_SHIPTOADDRESS</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"ShipToAddress"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="91"/>
  <line no="92">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="93">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="CustomerID"/&amp;gt;</token>
  </line>
  <line no="94">
    <token name="T_DOC_COMMENT">     * @var string $customerID</token>
  </line>
  <line no="95">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="96">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$customerID</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="98"/>
  <line no="99">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="100">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="CustomerTaxID"/&amp;gt;</token>
  </line>
  <line no="101">
    <token name="T_DOC_COMMENT">     * @var string $customerTaxID</token>
  </line>
  <line no="102">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="103">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="104">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$customerTaxID</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="105"/>
  <line no="106">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="107">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="BillingAddress"/&amp;gt;</token>
  </line>
  <line no="108">
    <token name="T_DOC_COMMENT">     * @var \Rebelo\SaftPt\AuditFile\Address $billingAddress</token>
  </line>
  <line no="109">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="110">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="111">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Address</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$billingAddress</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="112"/>
  <line no="113">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="114">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="ShipToAddress" minOccurs="0" maxOccurs="unbounded"/&amp;gt;</token>
  </line>
  <line no="115">
    <token name="T_DOC_COMMENT">     * @var \Rebelo\SaftPt\AuditFile\Address[] $shipToAddress</token>
  </line>
  <line no="116">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="117">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="118">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$shipToAddress</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="119"/>
  <line no="120">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="121">
    <token name="T_DOC_COMMENT">     * Customer&lt;br&gt;</token>
  </line>
  <line no="122">
    <token name="T_DOC_COMMENT">     * This table shall contain all the existing records operated during the</token>
  </line>
  <line no="123">
    <token name="T_DOC_COMMENT">     * taxation period in the relevant customers&#x2019; file, as well as those</token>
  </line>
  <line no="124">
    <token name="T_DOC_COMMENT">     * which may be implicit in the operations and do not exist in the relevant file.</token>
  </line>
  <line no="125">
    <token name="T_DOC_COMMENT">     * If, for instance, there is a sale for cash showing only the customer&#x2019;s</token>
  </line>
  <line no="126">
    <token name="T_DOC_COMMENT">     * taxpayer registration number or his name, and not included in the customers</token>
  </line>
  <line no="127">
    <token name="T_DOC_COMMENT">     * file of the application, this client&#x2019;s data shall be exported as client</token>
  </line>
  <line no="128">
    <token name="T_DOC_COMMENT">     * in the SAF-T (PT).</token>
  </line>
  <line no="129">
    <token name="T_DOC_COMMENT">     * &lt;pre&gt;</token>
  </line>
  <line no="130">
    <token name="T_DOC_COMMENT">     *     &amp;lt;xs:element name="Customer"&amp;gt;</token>
  </line>
  <line no="131">
    <token name="T_DOC_COMMENT">     *       &amp;lt;xs:complexType&amp;gt;</token>
  </line>
  <line no="132">
    <token name="T_DOC_COMMENT">     *           &amp;lt;xs:sequence&amp;gt;</token>
  </line>
  <line no="133">
    <token name="T_DOC_COMMENT">     *               &amp;lt;xs:element ref="CustomerID"/&amp;gt;</token>
  </line>
  <line no="134">
    <token name="T_DOC_COMMENT">     *               &amp;lt;xs:element ref="AccountID"/&amp;gt;</token>
  </line>
  <line no="135">
    <token name="T_DOC_COMMENT">     *               &amp;lt;xs:element ref="CustomerTaxID"/&amp;gt;</token>
  </line>
  <line no="136">
    <token name="T_DOC_COMMENT">     *               &amp;lt;xs:element ref="CompanyName"/&amp;gt;</token>
  </line>
  <line no="137">
    <token name="T_DOC_COMMENT">     *               &amp;lt;xs:element ref="Contact" minOccurs="0"/&amp;gt;</token>
  </line>
  <line no="138">
    <token name="T_DOC_COMMENT">     *               &amp;lt;xs:element ref="BillingAddress"/&amp;gt;</token>
  </line>
  <line no="139">
    <token name="T_DOC_COMMENT">     *               &amp;lt;xs:element ref="ShipToAddress" minOccurs="0" maxOccurs="unbounded"/&amp;gt;</token>
  </line>
  <line no="140">
    <token name="T_DOC_COMMENT">     *               &amp;lt;xs:element ref="Telephone" minOccurs="0"/&amp;gt;</token>
  </line>
  <line no="141">
    <token name="T_DOC_COMMENT">     *               &amp;lt;xs:element ref="Fax" minOccurs="0"/&amp;gt;</token>
  </line>
  <line no="142">
    <token name="T_DOC_COMMENT">     *               &amp;lt;xs:element ref="Email" minOccurs="0"/&amp;gt;</token>
  </line>
  <line no="143">
    <token name="T_DOC_COMMENT">     *               &amp;lt;xs:element ref="Website" minOccurs="0"/&amp;gt;</token>
  </line>
  <line no="144">
    <token name="T_DOC_COMMENT">     *               &amp;lt;xs:element ref="SelfBillingIndicator"/&amp;gt;</token>
  </line>
  <line no="145">
    <token name="T_DOC_COMMENT">     *           &amp;lt;/xs:sequence&amp;gt;</token>
  </line>
  <line no="146">
    <token name="T_DOC_COMMENT">     *       &amp;lt;/xs:complexType&amp;gt;</token>
  </line>
  <line no="147">
    <token name="T_DOC_COMMENT">     *   &amp;lt;/xs:element&amp;gt;</token>
  </line>
  <line no="148">
    <token name="T_DOC_COMMENT">     * &lt;/pre&gt;</token>
  </line>
  <line no="149">
    <token name="T_DOC_COMMENT">     * @param \Rebelo\SaftPt\AuditFile\ErrorRegister $errorRegister</token>
  </line>
  <line no="150">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="151">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="152">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">ErrorRegister</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errorRegister</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="153">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="154">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">parent</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errorRegister</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="155">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="156"/>
  <line no="157">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="158">
    <token name="T_DOC_COMMENT">     * Gets as customerID&lt;br&gt;</token>
  </line>
  <line no="159">
    <token name="T_DOC_COMMENT">     * In the list of clients cannot exist more than one registration</token>
  </line>
  <line no="160">
    <token name="T_DOC_COMMENT">     * with the same CustomerID. In the case of final consumers,</token>
  </line>
  <line no="161">
    <token name="T_DOC_COMMENT">     * a generic client with the designation of &#x201C;Consumidor final&#x201D;</token>
  </line>
  <line no="162">
    <token name="T_DOC_COMMENT">     * (Final Consumer) shall be created.</token>
  </line>
  <line no="163">
    <token name="T_DOC_COMMENT">     * &lt;pre&gt;</token>
  </line>
  <line no="164">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="CustomerID"/&amp;gt;</token>
  </line>
  <line no="165">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element name="CustomerID" type="SAFPTtextTypeMandatoryMax30Car"/&amp;gt;</token>
  </line>
  <line no="166">
    <token name="T_DOC_COMMENT">     * &lt;/pre&gt;</token>
  </line>
  <line no="167">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="168">
    <token name="T_DOC_COMMENT">     * @throws \Error</token>
  </line>
  <line no="169">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="170">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="171">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getCustomerID</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">string</token>
  </line>
  <line no="172">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="173">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="174">
    <token name="T_WHITESPACE">            </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">info</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" getted '%s'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customerID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="175">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customerID</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="176">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="177"/>
  <line no="178">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="179">
    <token name="T_DOC_COMMENT">     * Get if is set CustomerID</token>
  </line>
  <line no="180">
    <token name="T_DOC_COMMENT">     * @return bool</token>
  </line>
  <line no="181">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="182">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="183">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">issetCustomerID</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">bool</token>
  </line>
  <line no="184">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="185">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customerID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="186">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="187"/>
  <line no="188">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="189">
    <token name="T_DOC_COMMENT">     * Sets a new customerID&lt;br&gt;</token>
  </line>
  <line no="190">
    <token name="T_DOC_COMMENT">     * In the list of clients cannot exist more than one registration</token>
  </line>
  <line no="191">
    <token name="T_DOC_COMMENT">     * with the same CustomerID. In the case of final consumers,</token>
  </line>
  <line no="192">
    <token name="T_DOC_COMMENT">     * a generic client with the designation of &#x201C;Consumidor final&#x201D;</token>
  </line>
  <line no="193">
    <token name="T_DOC_COMMENT">     * (Final Consumer) shall be created.</token>
  </line>
  <line no="194">
    <token name="T_DOC_COMMENT">     * &lt;pre&gt;</token>
  </line>
  <line no="195">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="CustomerID"/&amp;gt;</token>
  </line>
  <line no="196">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element name="CustomerID" type="SAFPTtextTypeMandatoryMax30Car"/&amp;gt;</token>
  </line>
  <line no="197">
    <token name="T_DOC_COMMENT">     * &lt;/pre&gt;</token>
  </line>
  <line no="198">
    <token name="T_DOC_COMMENT">     * @param string $customerID</token>
  </line>
  <line no="199">
    <token name="T_DOC_COMMENT">     * @return bool true if the value is valid</token>
  </line>
  <line no="200">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="201">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="202">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setCustomerID</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$customerID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">bool</token>
  </line>
  <line no="203">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="204">
    <token name="T_WHITESPACE">        </token>
    <token name="T_TRY">try</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="205">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customerID</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">valTextMandMaxCar</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="206">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$customerID</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">30</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="207">
    <token name="T_WHITESPACE">                </token>
    <token name="T_METHOD_C">__METHOD__</token>
  </line>
  <line no="208">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="209">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_WHITESPACE">           </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="210">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CATCH">catch</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">AuditFileException</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$e</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="211">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customerID</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$customerID</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="212">
    <token name="T_WHITESPACE">            </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="213">
    <token name="T_WHITESPACE">                </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">error</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"  '%s'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$e</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getMessage</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="214">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getErrorRegistor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addOnSetValue</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"CustomerID_not_valid"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="215">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_WHITESPACE">           </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="216">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="217">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="218">
    <token name="T_WHITESPACE">            </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" set to '%s'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customerID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="219">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="220">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="221"/>
  <line no="222">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="223">
    <token name="T_DOC_COMMENT">     * Gets as customerTaxID&lt;br&gt;</token>
  </line>
  <line no="224">
    <token name="T_DOC_COMMENT">     * It must be indicated without the country&#x2019;s prefix.</token>
  </line>
  <line no="225">
    <token name="T_DOC_COMMENT">     * The generic client, corresponding to the</token>
  </line>
  <line no="226">
    <token name="T_DOC_COMMENT">     * aforementioned &#x201C;Consumidor final&#x201D; (Final consumer)</token>
  </line>
  <line no="227">
    <token name="T_DOC_COMMENT">     * shall be identified with the Tax Identification Number &#x201C;999999990&#x201D;.&lt;br&gt;</token>
  </line>
  <line no="228">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="CustomerTaxID"/&amp;gt;&lt;br&gt;</token>
  </line>
  <line no="229">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element name="CustomerTaxID" type="SAFPTtextTypeMandatoryMax30Car"/&amp;gt;</token>
  </line>
  <line no="230">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="231">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="232">
    <token name="T_DOC_COMMENT">     * @throws \Error</token>
  </line>
  <line no="233">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="234">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="235">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getCustomerTaxID</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">string</token>
  </line>
  <line no="236">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="237">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="238">
    <token name="T_WHITESPACE">            </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">info</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" getted '%s'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customerTaxID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="239">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customerTaxID</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="240">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="241"/>
  <line no="242">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="243">
    <token name="T_DOC_COMMENT">     * Get if is set CustomerTaxID</token>
  </line>
  <line no="244">
    <token name="T_DOC_COMMENT">     * @return bool</token>
  </line>
  <line no="245">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="246">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="247">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">issetCustomerTaxID</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">bool</token>
  </line>
  <line no="248">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="249">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customerTaxID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="250">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="251"/>
  <line no="252">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="253">
    <token name="T_DOC_COMMENT">     * Sets a new customerTaxID&lt;br&gt;</token>
  </line>
  <line no="254">
    <token name="T_DOC_COMMENT">     * It must be indicated without the country&#x2019;s prefix.</token>
  </line>
  <line no="255">
    <token name="T_DOC_COMMENT">     * The generic client, corresponding to the</token>
  </line>
  <line no="256">
    <token name="T_DOC_COMMENT">     * aforementioned &#x201C;Consumidor final&#x201D; (Final consumer)</token>
  </line>
  <line no="257">
    <token name="T_DOC_COMMENT">     * shall be identified with the Tax Identification Number &#x201C;999999990&#x201D;.&lt;br&gt;</token>
  </line>
  <line no="258">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="CustomerTaxID"/&amp;gt;&lt;br&gt;</token>
  </line>
  <line no="259">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element name="CustomerTaxID" type="SAFPTtextTypeMandatoryMax30Car"/&amp;gt;</token>
  </line>
  <line no="260">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="261">
    <token name="T_DOC_COMMENT">     * @param string $customerTaxID</token>
  </line>
  <line no="262">
    <token name="T_DOC_COMMENT">     * @return bool true if the value is valid</token>
  </line>
  <line no="263">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="264">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="265">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setCustomerTaxID</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$customerTaxID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">bool</token>
  </line>
  <line no="266">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="267">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="268">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$customerTaxID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="269">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">30</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="270">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="271">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"CustomerTaxID length must be between 1 and 30 but have '%s'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="272">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$length</token>
  </line>
  <line no="273">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="274">
    <token name="T_WHITESPACE">            </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="275">
    <token name="T_WHITESPACE">                </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">error</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" '%s'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="276">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="277">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getErrorRegistor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addOnSetValue</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"CustomerTaxID_not_valid"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="278">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="279">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="280">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="281">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customerTaxID</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$customerTaxID</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="282">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="283">
    <token name="T_WHITESPACE">            </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" set to '%s'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customerTaxID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="284">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="285">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="286"/>
  <line no="287">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="288">
    <token name="T_DOC_COMMENT">     * Gets as billingAddress&lt;br&gt;</token>
  </line>
  <line no="289">
    <token name="T_DOC_COMMENT">     * Head office address or the fixed /permanent establishment address,</token>
  </line>
  <line no="290">
    <token name="T_DOC_COMMENT">     * located on Portuguese territory.&lt;br&gt;</token>
  </line>
  <line no="291">
    <token name="T_DOC_COMMENT">     * The Address instance will be create once you get this method&lt;br&gt;</token>
  </line>
  <line no="292">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="BillingAddress"/&amp;gt;&lt;br&gt;</token>
  </line>
  <line no="293">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element name="BillingAddress" type="AddressStructure"/&amp;gt;</token>
  </line>
  <line no="294">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="295">
    <token name="T_DOC_COMMENT">     * @return \Rebelo\SaftPt\AuditFile\Address</token>
  </line>
  <line no="296">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="297">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="298">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getBillingAddress</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Address</token>
  </line>
  <line no="299">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="300">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">billingAddress</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="301">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">billingAddress</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Address</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getErrorRegistor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="302">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="303">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">trace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="304">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">billingAddress</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="305">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="306"/>
  <line no="307">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="308">
    <token name="T_DOC_COMMENT">     * Get if is set BillingAddress</token>
  </line>
  <line no="309">
    <token name="T_DOC_COMMENT">     * @return bool</token>
  </line>
  <line no="310">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="311">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="312">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">issetBillingAddress</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">bool</token>
  </line>
  <line no="313">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="314">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">billingAddress</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="315">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="316"/>
  <line no="317">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="318">
    <token name="T_DOC_COMMENT">     * Adds as shipToAddress&lt;br&gt;</token>
  </line>
  <line no="319">
    <token name="T_DOC_COMMENT">     * This method every time that is invoked will return a new Instance</token>
  </line>
  <line no="320">
    <token name="T_DOC_COMMENT">     * of 'Address' that shal must be populated with the correct values.&lt;br&gt;</token>
  </line>
  <line no="321">
    <token name="T_DOC_COMMENT">     * If there is a need to make more than one reference,</token>
  </line>
  <line no="322">
    <token name="T_DOC_COMMENT">     * this structure can be generated as many times as necessary.&lt;br&gt;</token>
  </line>
  <line no="323">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element ref="ShipToAddress" minOccurs="0" maxOccurs="unbounded"/&amp;gt;&lt;br&gt;</token>
  </line>
  <line no="324">
    <token name="T_DOC_COMMENT">     * &amp;lt;xs:element name="ShipToAddress" type="AddressStructure"/&amp;gt;</token>
  </line>
  <line no="325">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="326">
    <token name="T_DOC_COMMENT">     * @return \Rebelo\SaftPt\AuditFile\Address The new Address instance that was add and must be populated</token>
  </line>
  <line no="327">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="328">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="329">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">addShipToAddress</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Address</token>
  </line>
  <line no="330">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="331">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$shipToAddress</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Address</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getErrorRegistor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="332">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">shipToAddress</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$shipToAddress</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="333">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="334">
    <token name="T_WHITESPACE">            </token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" ShipToAddress add to stack "</token>
  </line>
  <line no="335">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="336">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$shipToAddress</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="337">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="338"/>
  <line no="339">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="340">
    <token name="T_DOC_COMMENT">     * Gets as shipToAddress</token>
  </line>
  <line no="341">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="342">
    <token name="T_DOC_COMMENT">     * @return \Rebelo\SaftPt\AuditFile\Address[]</token>
  </line>
  <line no="343">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="344">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="345">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getShipToAddress</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
  </line>
  <line no="346">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="347">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">trace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="348">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">shipToAddress</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="349">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="350"/>
  <line no="351">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="352">
    <token name="T_DOC_COMMENT">     * Create the xml node for Customer</token>
  </line>
  <line no="353">
    <token name="T_DOC_COMMENT">     * @param \SimpleXMLElement $node</token>
  </line>
  <line no="354">
    <token name="T_DOC_COMMENT">     * @return \SimpleXMLElement</token>
  </line>
  <line no="355">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="356">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="357">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">createXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SimpleXMLElement</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SimpleXMLElement</token>
  </line>
  <line no="358">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="359">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">trace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="360"/>
  <line no="361">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">MasterFiles</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_MASTERFILES</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="362">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="363">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Node name should be '%s' but is '%s"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="364">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">MasterFiles</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_MASTERFILES</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="365">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="366">
    <token name="T_WHITESPACE">            </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="367">
    <token name="T_WHITESPACE">                </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">error</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" '%s'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="368">
    <token name="T_WHITESPACE">            </token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AuditFileException</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="369">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="370"/>
  <line no="371">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_CUSTOMER</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="372"/>
  <line no="373">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customerID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="374">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_CUSTOMERID</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getCustomerID</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="375">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="376">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_CUSTOMERID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="377">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getErrorRegistor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addOnCreateXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"CustomerID_not_valid"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="378">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="379"/>
  <line no="380">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">accountID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="381">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_ACCOUNTID</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAccountID</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="382">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="383">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_ACCOUNTID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="384">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getErrorRegistor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addOnCreateXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"AccountID_not_valid"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="385">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="386"/>
  <line no="387">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customerTaxID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="388">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="389">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_CUSTOMERTAXID</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">strval</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getCustomerTaxID</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="390">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="391">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="392">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_CUSTOMERTAXID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="393">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getErrorRegistor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addOnCreateXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"CustomerTaxID_not_valid"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="394">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="395"/>
  <line no="396">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">companyName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="397">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="398">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_COMPANYNAME</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getCompanyName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="399">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="400">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="401">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_COMPANYNAME</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="402">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getErrorRegistor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addOnCreateXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"CompanyName_not_valid"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="403">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="404"/>
  <line no="405">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getContact</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="406">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_CONTACT</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getContact</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="407">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="408"/>
  <line no="409">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$billAddr</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_BILLINGADDRESS</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="410">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">billingAddress</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="411">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBillingAddress</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">createXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$billAddr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="412">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="413">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getErrorRegistor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addOnCreateXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"BillingAddress_not_valid"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="414">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="415"/>
  <line no="416">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getShipToAddress</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$shipAddr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="417">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">/* @var $shipAddr Address */</token>
  </line>
  <line no="418">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$shipAddr</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">createXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_SHIPTOADDRESS</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="419">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="420"/>
  <line no="421">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getTelephone</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="422">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_TELEPHONE</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getTelephone</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="423">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="424"/>
  <line no="425">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getFax</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="426">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_FAX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getFax</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="427">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="428"/>
  <line no="429">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getEmail</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="430">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_EMAIL</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getEmail</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="431">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="432"/>
  <line no="433">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getWebsite</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="434">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_WEBSITE</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getWebsite</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="435">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="436"/>
  <line no="437">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">selfBillingIndicator</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="438">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="439">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_SELFBILLINGINDICATOR</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="440">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getSelfBillingIndicator</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"1"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"0"</token>
  </line>
  <line no="441">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="442">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="443">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addChild</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_SELFBILLINGINDICATOR</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="444">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getErrorRegistor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addOnCreateXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"SelfBillingIndicator_not_valid"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="445">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="446"/>
  <line no="447">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$customerNode</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="448">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="449"/>
  <line no="450">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="451">
    <token name="T_DOC_COMMENT">     * Pasrse the xml node</token>
  </line>
  <line no="452">
    <token name="T_DOC_COMMENT">     * @param \SimpleXMLElement $node</token>
  </line>
  <line no="453">
    <token name="T_DOC_COMMENT">     * @return void</token>
  </line>
  <line no="454">
    <token name="T_DOC_COMMENT">     * @throws \Rebelo\SaftPt\AuditFile\AuditFileException</token>
  </line>
  <line no="455">
    <token name="T_DOC_COMMENT">     * @since 1.0.0</token>
  </line>
  <line no="456">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="457">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">parseXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SimpleXMLElement</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">void</token>
  </line>
  <line no="458">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="459">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">trace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="460">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_CUSTOMER</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="461">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="462">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Node name should be '%s' but is '%s"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="463">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_CUSTOMER</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="464">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="465">
    <token name="T_WHITESPACE">            </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Logger</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getLogger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="466">
    <token name="T_WHITESPACE">                </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">error</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" '%s'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="467">
    <token name="T_WHITESPACE">            </token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AuditFileException</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="468">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="469">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setCustomerID</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_CUSTOMERID</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="470">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setAccountID</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_ACCOUNTID</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="471">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setCustomerTaxID</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_CUSTOMERTAXID</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="472">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setCompanyName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_COMPANYNAME</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="473">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_CONTACT</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="474">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setContact</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_CONTACT</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="475">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="476">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setContact</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="477">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="478"/>
  <line no="479">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBillingAddress</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">parseXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_BILLINGADDRESS</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="480"/>
  <line no="481">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$count</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_SHIPTOADDRESS</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="482">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$count</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="483">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addShipToAddress</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">parseXmlNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="484">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_SHIPTOADDRESS</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
  </line>
  <line no="485">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="486">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="487"/>
  <line no="488">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setSelfBillingIndicator</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="489">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_SELFBILLINGINDICATOR</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="490">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="491">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="492">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_TELEPHONE</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="493">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setTelephone</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_TELEPHONE</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="494">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="495">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setTelephone</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="496">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="497">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_FAX</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="498">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setFax</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_FAX</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="499">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="500">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setFax</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="501">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="502">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_EMAIL</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="503">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setEmail</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_EMAIL</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="504">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="505">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setEmail</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="506">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="507">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_WEBSITE</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="508">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setWebsite</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">N_WEBSITE</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="509">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="510">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setWebsite</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="511">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="512">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="513">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="514"/>
</source>
